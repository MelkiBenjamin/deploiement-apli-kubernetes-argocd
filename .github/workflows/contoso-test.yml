name: test contoso

on:
  push:
  workflow_dispatch:

env:
    image-order: ${{ secrets.DOCKERHUB_USERNAME }}/order-service:latest
    image-product: ${{ secrets.DOCKERHUB_USERNAME }}/product-service:latest
    image-front: ${{ secrets.DOCKERHUB_USERNAME }}/store-front:latest
    nomcluster: nomcluster
    nom-grouperessource: grouperessource
    platforms: linux/amd64
    location: francecentral
    sensible-pas-afficher: 1>/dev/null

permissions:
  pull-requests: read

jobs:
  contoso:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Azure login
        uses: Azure/login@v2.0.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get K8s context
        uses: Azure/aks-set-context@v4.0.0
        with:
          resource-group: ${{ env.nom-grouperessource }}
          cluster-name: ${{ env.nomcluster }}

      - name: setup kubectl   
        uses: Azure/setup-kubectl@v4.0.0      
        id: install

      - name: Setup ArgoCD CLI 
        uses: imajeetyadav/argocd-cli@v1

      - name: connexion argocd
        env:
          ip: kubectl get svc argocd-server -n argocd -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
          mdp: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo
        run: argocd login $(kubectl get service argocd-server -n argocd --output=jsonpath='{.status.loadBalancer.ingress[0].ip}') --username admin --password ${{ secrets.ARGOCD }} --insecure ${{ env.sensible-pas-afficher }}

      - name: Create Application Contoso with Argocd avec namespace
        run: |
          kubectl get namespace contoso || kubectl create namespace contoso
          
      - uses: ejhayes/action-argocd-deploy@v1.0.0
        with:
            clientId: admin
            clientSecret: ${{ secrets.ARGOCD }}
            clusterName: 'default'
            baseUrl: https://localhost.com
            name: contoso
            namespace: contoso
            path: ecommerce
            valuesFile: ecommerce/values.yaml
            project: contoso
            annotations: |
              myannotation: "true"
            labels: |
              env: prod
            info: |
              rev: ${{ github.ref }}
              sha: ${{ github.sha }}