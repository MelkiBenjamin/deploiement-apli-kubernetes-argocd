name: Build

on:
  push:
    branches:
      - main


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          
      - run: ls
      - name: installer minikube
        run:  |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube

      - name: demarer minikube
        run: minikube start --driver=docker
        
      - name: install helm
        uses: Azure/setup-helm@v4
        id: install-helm
      - run: |
          helm repo add sonarqube https://SonarSource.github.io/helm-chart-sonarqube
          helm repo update
          kubectl create namespace sonarqube
          helm upgrade --install -n sonarqube sonarqube sonarqube/sonarqube

      - name: sonarqube verfication
        run: kubectl get svc -n sonarqube
      - run: sleep 30
      - run: kubectl port-forward svc/sonarqube-sonarqube -n argocd 8080:443 &
      - run: curl 127.0.0.1:9000
#      - name: redirection de port
#        run: |
#          echo '{"spec": {"type": "LoadBalancer"}}' > patch.json
#          kubectl patch svc sonarqube-sonarqube -n sonarqube --type merge --patch "$(cat patch.json)"

#      - run: sleep 70
      - name: sonarqube verfication
        run: kubectl get svc -n sonarqube
          
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_HOST_URL: 127.0.0.1:9000
          sonar.login: ${{ secrets.SONAR_LOGIN }}
          sonar.password: ${{ secrets.SONAR_password }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
