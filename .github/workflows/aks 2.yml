name: Build and deploy an app to AKS suite2

on:
#  push:
  workflow_dispatch:
   
jobs:
  createcluster:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get K8s context
        uses: Azure/aks-set-context@v4.0.0
        with:
          resource-group: monResourceGroup
          cluster-name: monClusterAKS

      - uses: Azure/setup-kubectl@v4.0.0      
        id: install
        
      - name: Install cli argocd
        run: |
          sudo apt update
          sudo apt install curl
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
          rm argocd-linux-amd64

#      - name: creer namespace argocd
#        run: kubectl create namespace argocd

      - name: Deploys application argocd
        uses: Azure/k8s-deploy@v5.0.0
        with:
          namespace: argocd
          action: deploy
          manifests: https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

      - name: redirection de port
        run: |
          echo '{"spec": {"type": "LoadBalancer"}}' > patch.json
          kubectl patch svc argocd-server -n argocd --type merge --patch "$(cat patch.json)"
      
      - name: argocd attendre
        run: sleep 60

      - name: argocd verfication
        run: kubectl get svc -n argocd
    
      - name: kubectl get pods
        run: kubectl get pods -n argocd
             
      - name: affiche 2
        run: kubectl get svc argocd-server -n argocd -o jsonpath='{.status.loadBalancer.ingress[0].ip}'

      - name: conexion argocd
        env:
          ip: kubectl get svc argocd-server -n argocd -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
          mdp: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo
        run: argocd login $(kubectl get service argocd-server -n argocd --output=jsonpath='{.status.loadBalancer.ingress[0].ip}') --username admin --password $(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo) --insecure

      - name: Get ArgoCD password
        env:
          ARGOCD: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo
        run: argocd account update-password --account admin --new-password ${{ secrets.ARGOCD }} --current-password $(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo)
